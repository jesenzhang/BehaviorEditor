//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_AssetObjectManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.AssetObjectManager), typeof(Framework.Singleton<Framework.AssetObjectManager>));
		L.RegFunction("LoadObject", LoadObject);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegFunction("LoadObjectCallback", Framework_AssetObjectManager_LoadObjectCallback);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Framework.AssetObjectManager obj = (Framework.AssetObjectManager)ToLua.CheckObject<Framework.AssetObjectManager>(L, 1);
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundle));
			Framework.AssetObjectManager.LoadObjectCallback arg1 = (Framework.AssetObjectManager.LoadObjectCallback)ToLua.CheckDelegate<Framework.AssetObjectManager.LoadObjectCallback>(L, 3);
			obj.LoadObject(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Framework_AssetObjectManager_LoadObjectCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<Framework.AssetObjectManager.LoadObjectCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<Framework.AssetObjectManager.LoadObjectCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

