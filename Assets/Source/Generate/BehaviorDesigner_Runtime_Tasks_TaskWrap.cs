//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BehaviorDesigner_Runtime_Tasks_TaskWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BehaviorDesigner.Runtime.Tasks.Task), typeof(System.Object));
		L.RegFunction("OnAwake", OnAwake);
		L.RegFunction("OnStart", OnStart);
		L.RegFunction("OnUpdate", OnUpdate);
		L.RegFunction("OnLateUpdate", OnLateUpdate);
		L.RegFunction("OnFixedUpdate", OnFixedUpdate);
		L.RegFunction("OnEnd", OnEnd);
		L.RegFunction("OnPause", OnPause);
		L.RegFunction("GetPriority", GetPriority);
		L.RegFunction("GetUtility", GetUtility);
		L.RegFunction("OnBehaviorRestart", OnBehaviorRestart);
		L.RegFunction("OnBehaviorComplete", OnBehaviorComplete);
		L.RegFunction("OnReset", OnReset);
		L.RegFunction("OnDrawGizmos", OnDrawGizmos);
		L.RegFunction("OnCollisionEnter", OnCollisionEnter);
		L.RegFunction("OnCollisionExit", OnCollisionExit);
		L.RegFunction("OnTriggerEnter", OnTriggerEnter);
		L.RegFunction("OnTriggerExit", OnTriggerExit);
		L.RegFunction("OnCollisionEnter2D", OnCollisionEnter2D);
		L.RegFunction("OnCollisionExit2D", OnCollisionExit2D);
		L.RegFunction("OnTriggerEnter2D", OnTriggerEnter2D);
		L.RegFunction("OnTriggerExit2D", OnTriggerExit2D);
		L.RegFunction("OnControllerColliderHit", OnControllerColliderHit);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("GameObject", null, set_GameObject);
		L.RegVar("Transform", null, set_Transform);
		L.RegVar("NodeData", get_NodeData, set_NodeData);
		L.RegVar("Owner", get_Owner, set_Owner);
		L.RegVar("ID", get_ID, set_ID);
		L.RegVar("FriendlyName", get_FriendlyName, set_FriendlyName);
		L.RegVar("IsInstant", get_IsInstant, set_IsInstant);
		L.RegVar("ReferenceID", get_ReferenceID, set_ReferenceID);
		L.RegVar("Disabled", get_Disabled, set_Disabled);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			BehaviorDesigner.Runtime.Tasks.TaskStatus o = obj.OnUpdate();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnLateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnFixedUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.OnPause(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPriority(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			float o = obj.GetPriority();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUtility(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			float o = obj.GetUtility();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorRestart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnBehaviorRestart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnBehaviorComplete();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrawGizmos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			obj.OnDrawGizmos();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject<UnityEngine.Collision>(L, 2);
			obj.OnCollisionEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject<UnityEngine.Collision>(L, 2);
			obj.OnCollisionExit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckObject<UnityEngine.Collider>(L, 2);
			obj.OnTriggerEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckObject<UnityEngine.Collider>(L, 2);
			obj.OnTriggerExit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionEnter2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collision2D arg0 = (UnityEngine.Collision2D)ToLua.CheckObject<UnityEngine.Collision2D>(L, 2);
			obj.OnCollisionEnter2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionExit2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collision2D arg0 = (UnityEngine.Collision2D)ToLua.CheckObject<UnityEngine.Collision2D>(L, 2);
			obj.OnCollisionExit2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerEnter2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collider2D arg0 = (UnityEngine.Collider2D)ToLua.CheckObject<UnityEngine.Collider2D>(L, 2);
			obj.OnTriggerEnter2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerExit2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.Collider2D arg0 = (UnityEngine.Collider2D)ToLua.CheckObject<UnityEngine.Collider2D>(L, 2);
			obj.OnTriggerExit2D(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnControllerColliderHit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.Task>(L, 1);
			UnityEngine.ControllerColliderHit arg0 = (UnityEngine.ControllerColliderHit)ToLua.CheckObject<UnityEngine.ControllerColliderHit>(L, 2);
			obj.OnControllerColliderHit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NodeData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			BehaviorDesigner.Runtime.NodeData ret = obj.NodeData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NodeData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Owner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			BehaviorDesigner.Runtime.Behavior ret = obj.Owner;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Owner on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			int ret = obj.ID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FriendlyName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			string ret = obj.FriendlyName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FriendlyName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsInstant(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			bool ret = obj.IsInstant;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsInstant on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReferenceID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			int ret = obj.ReferenceID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ReferenceID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Disabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			bool ret = obj.Disabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Disabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.GameObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Transform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.Transform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Transform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NodeData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			BehaviorDesigner.Runtime.NodeData arg0 = (BehaviorDesigner.Runtime.NodeData)ToLua.CheckObject<BehaviorDesigner.Runtime.NodeData>(L, 2);
			obj.NodeData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index NodeData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Owner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			BehaviorDesigner.Runtime.Behavior arg0 = (BehaviorDesigner.Runtime.Behavior)ToLua.CheckObject<BehaviorDesigner.Runtime.Behavior>(L, 2);
			obj.Owner = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Owner on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FriendlyName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.FriendlyName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FriendlyName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsInstant(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsInstant = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsInstant on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReferenceID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReferenceID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ReferenceID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Disabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.Task obj = (BehaviorDesigner.Runtime.Tasks.Task)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Disabled = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Disabled on a nil value");
		}
	}
}

